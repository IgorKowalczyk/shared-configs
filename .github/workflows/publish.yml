name: Publish packages

on:
 release:
  types: [created]
 workflow_dispatch:

jobs:
 setup:
  runs-on: ubuntu-latest
  permissions:
   contents: read
   packages: write
   id-token: write
  strategy:
   fail-fast: false
   matrix:
    node: ["lts/*"]
  steps:
   # Checkout the repository
   - name: 🧱 Checkout repository
     uses: actions/checkout@v4

   # Setup PNPM
   - name: 🔩 Setup PNPM
     uses: pnpm/action-setup@v4
     with:
      standalone: true

   # Setup Node.js
   - name: 🔩 Setup Node ${{ matrix.node }}
     uses: actions/setup-node@v4
     with:
      node-version: ${{ matrix.node }}
      always-auth: true
      cache: "pnpm"

 install:
  runs-on: ubuntu-latest
  needs: setup
  steps:
   # Checkout the repository
   - name: 🧱 Checkout repository
     uses: actions/checkout@v4

   # Install dependencies
   - name: 🚀 Install dependencies
     run: pnpm install

 build:
  runs-on: ubuntu-latest
  needs: install
  steps:
   # Checkout the repository
   - name: 🧱 Checkout repository
     uses: actions/checkout@v4

   # Build the project
   - name: 🛠️ Build packages
     run: pnpm build

 publish-github:
  runs-on: ubuntu-latest
  needs: build
  steps:
   # Checkout the repository
   - name: 🧱 Checkout repository
     uses: actions/checkout@v4

   # Publish to GitHub Package Registry
   - name: 📦 Publish to GitHub Package Registry
     env:
      NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
     run: |
      echo "Simulating GitHub Package Registry publish..."

 publish-npm:
  runs-on: ubuntu-latest
  needs: build
  steps:
   # Checkout the repository
   - name: 🧱 Checkout repository
     uses: actions/checkout@v4

   # Publish to NPM Registry
   - name: 📦 Publish to NPM Registry
     env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
     run: |
      echo "Simulating NPM Registry publish..."
